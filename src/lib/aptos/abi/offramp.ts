export const CreateAptosOffRampABI = (aptosCCIPAddress: string) =>
  ({
    address: aptosCCIPAddress,
    name: 'offramp',
    friends: [],
    exposed_functions: [
      {
        name: 'is_enabled',
        visibility: 'public',
        is_entry: false,
        is_view: false,
        generic_type_params: [],
        params: [`&${aptosCCIPAddress}::offramp::SourceChainConfig`],
        return: ['bool'],
      },
      {
        name: 'initialize',
        visibility: 'public',
        is_entry: true,
        is_view: false,
        generic_type_params: [],
        params: [
          '&signer',
          'u64',
          'u32',
          'vector<u64>',
          'vector<bool>',
          'vector<bool>',
          'vector<vector<u8>>',
        ],
        return: [],
      },
      {
        name: 'owner',
        visibility: 'public',
        is_entry: false,
        is_view: true,
        generic_type_params: [],
        params: [],
        return: ['address'],
      },
      {
        name: 'accept_ownership',
        visibility: 'public',
        is_entry: true,
        is_view: false,
        generic_type_params: [],
        params: ['&signer'],
        return: [],
      },
      {
        name: 'transfer_ownership',
        visibility: 'public',
        is_entry: true,
        is_view: false,
        generic_type_params: [],
        params: ['&signer', 'address'],
        return: [],
      },
      {
        name: 'execute',
        visibility: 'public',
        is_entry: true,
        is_view: false,
        generic_type_params: [],
        params: ['&signer', 'vector<vector<u8>>', 'vector<u8>'],
        return: [],
      },
      {
        name: 'execute_ownership_transfer',
        visibility: 'public',
        is_entry: true,
        is_view: false,
        generic_type_params: [],
        params: ['&signer', 'address'],
        return: [],
      },
      {
        name: 'has_pending_transfer',
        visibility: 'public',
        is_entry: false,
        is_view: true,
        generic_type_params: [],
        params: [],
        return: ['bool'],
      },
      {
        name: 'pending_transfer_accepted',
        visibility: 'public',
        is_entry: false,
        is_view: true,
        generic_type_params: [],
        params: [],
        return: ['0x1::option::Option<bool>'],
      },
      {
        name: 'pending_transfer_from',
        visibility: 'public',
        is_entry: false,
        is_view: true,
        generic_type_params: [],
        params: [],
        return: ['0x1::option::Option<address>'],
      },
      {
        name: 'pending_transfer_to',
        visibility: 'public',
        is_entry: false,
        is_view: true,
        generic_type_params: [],
        params: [],
        return: ['0x1::option::Option<address>'],
      },
      {
        name: 'mcms_entrypoint',
        visibility: 'public',
        is_entry: false,
        is_view: false,
        generic_type_params: [{ constraints: ['key'] }],
        params: ['0x1::object::Object<T0>'],
        return: ['0x1::option::Option<u128>'],
      },
      {
        name: 'register_mcms_entrypoint',
        visibility: 'friend',
        is_entry: false,
        is_view: false,
        generic_type_params: [],
        params: ['&signer'],
        return: [],
      },
      {
        name: 'get_static_config',
        visibility: 'public',
        is_entry: false,
        is_view: true,
        generic_type_params: [],
        params: [],
        return: [`${aptosCCIPAddress}::offramp::StaticConfig`],
      },
      {
        name: 'type_and_version',
        visibility: 'public',
        is_entry: false,
        is_view: true,
        generic_type_params: [],
        params: [],
        return: ['0x1::string::String'],
      },
      {
        name: 'latest_config_details',
        visibility: 'public',
        is_entry: false,
        is_view: true,
        generic_type_params: [],
        params: ['u8'],
        return: [`${aptosCCIPAddress}::ocr3_base::OCRConfig`],
      },
      {
        name: 'set_ocr3_config',
        visibility: 'public',
        is_entry: true,
        is_view: false,
        generic_type_params: [],
        params: [
          '&signer',
          'vector<u8>',
          'u8',
          'u8',
          'bool',
          'vector<vector<u8>>',
          'vector<address>',
        ],
        return: [],
      },
      {
        name: 'apply_source_chain_config_updates',
        visibility: 'public',
        is_entry: true,
        is_view: false,
        generic_type_params: [],
        params: ['&signer', 'vector<u64>', 'vector<bool>', 'vector<bool>', 'vector<vector<u8>>'],
        return: [],
      },
      {
        name: 'assert_source_chain_enabled',
        visibility: 'public',
        is_entry: false,
        is_view: false,
        generic_type_params: [],
        params: [`&mut ${aptosCCIPAddress}::offramp::OffRampState`, 'u64'],
        return: [],
      },
      {
        name: 'calculate_message_hash',
        visibility: 'public',
        is_entry: false,
        is_view: true,
        generic_type_params: [],
        params: [
          'vector<u8>',
          'u64',
          'u64',
          'u64',
          'u64',
          'vector<u8>',
          'address',
          'vector<u8>',
          'u256',
          'vector<vector<u8>>',
          'vector<address>',
          'vector<u32>',
          'vector<vector<u8>>',
          'vector<u256>',
        ],
        return: ['vector<u8>'],
      },
      {
        name: 'calculate_metadata_hash',
        visibility: 'public',
        is_entry: false,
        is_view: true,
        generic_type_params: [],
        params: ['u64', 'u64', 'vector<u8>'],
        return: ['vector<u8>'],
      },
      {
        name: 'chain_selector',
        visibility: 'public',
        is_entry: false,
        is_view: false,
        generic_type_params: [],
        params: [`&${aptosCCIPAddress}::offramp::StaticConfig`],
        return: ['u64'],
      },
      {
        name: 'commit',
        visibility: 'public',
        is_entry: true,
        is_view: false,
        generic_type_params: [],
        params: ['&signer', 'vector<vector<u8>>', 'vector<u8>', 'vector<vector<u8>>'],
        return: [],
      },
      {
        name: 'permissionless_execution_threshold_seconds',
        visibility: 'public',
        is_entry: false,
        is_view: false,
        generic_type_params: [],
        params: [`&${aptosCCIPAddress}::offramp::DynamicConfig`],
        return: ['u32'],
      },
      {
        name: 'get_all_source_chain_configs',
        visibility: 'public',
        is_entry: false,
        is_view: true,
        generic_type_params: [],
        params: [],
        return: ['vector<u64>', `vector<${aptosCCIPAddress}::offramp::SourceChainConfig>`],
      },
      {
        name: 'get_dynamic_config',
        visibility: 'public',
        is_entry: false,
        is_view: true,
        generic_type_params: [],
        params: [],
        return: [`${aptosCCIPAddress}::offramp::DynamicConfig`],
      },
      {
        name: 'get_execution_state',
        visibility: 'public',
        is_entry: false,
        is_view: true,
        generic_type_params: [],
        params: ['u64', 'u64'],
        return: ['u8'],
      },
      {
        name: 'get_latest_price_sequence_number',
        visibility: 'public',
        is_entry: false,
        is_view: true,
        generic_type_params: [],
        params: [],
        return: ['u64'],
      },
      {
        name: 'get_merkle_root',
        visibility: 'public',
        is_entry: false,
        is_view: true,
        generic_type_params: [],
        params: ['vector<u8>'],
        return: ['u64'],
      },
      {
        name: 'get_source_chain_config',
        visibility: 'public',
        is_entry: false,
        is_view: true,
        generic_type_params: [],
        params: ['u64'],
        return: [`${aptosCCIPAddress}::offramp::SourceChainConfig`],
      },
      {
        name: 'get_state_address',
        visibility: 'public',
        is_entry: false,
        is_view: true,
        generic_type_params: [],
        params: [],
        return: ['address'],
      },
      {
        name: 'is_rmn_verification_disabled',
        visibility: 'public',
        is_entry: false,
        is_view: false,
        generic_type_params: [],
        params: [`&${aptosCCIPAddress}::offramp::SourceChainConfig`],
        return: ['bool'],
      },
      {
        name: 'manually_execute',
        visibility: 'public',
        is_entry: true,
        is_view: false,
        generic_type_params: [],
        params: ['vector<u8>'],
        return: [],
      },
      {
        name: 'set_dynamic_config',
        visibility: 'public',
        is_entry: true,
        is_view: false,
        generic_type_params: [],
        params: ['&signer', 'u32'],
        return: [],
      },
    ],
    structs: [
      {
        name: 'McmsCallback',
        is_native: false,
        is_event: false,
        abilities: ['drop'],
        generic_type_params: [],
        fields: [{ name: 'dummy_field', type: 'bool' }],
      },
      {
        name: 'StaticConfig',
        is_native: false,
        is_event: false,
        abilities: ['copy', 'drop', 'store'],
        generic_type_params: [],
        fields: [
          { name: 'chain_selector', type: 'u64' },
          { name: 'rmn_remote', type: 'address' },
          { name: 'token_admin_registry', type: 'address' },
          { name: 'nonce_manager', type: 'address' },
        ],
      },
      {
        name: 'MerkleRoot',
        is_native: false,
        is_event: false,
        abilities: ['copy', 'drop', 'store'],
        generic_type_params: [],
        fields: [
          { name: 'source_chain_selector', type: 'u64' },
          { name: 'on_ramp_address', type: 'vector<u8>' },
          { name: 'min_seq_nr', type: 'u64' },
          { name: 'max_seq_nr', type: 'u64' },
          { name: 'merkle_root', type: 'vector<u8>' },
        ],
      },
      {
        name: 'AlreadyAttempted',
        is_native: false,
        is_event: true,
        abilities: ['drop', 'store'],
        generic_type_params: [],
        fields: [
          { name: 'source_chain_selector', type: 'u64' },
          { name: 'sequence_number', type: 'u64' },
        ],
      },
      {
        name: 'Any2AptosRampMessage',
        is_native: false,
        is_event: false,
        abilities: ['drop'],
        generic_type_params: [],
        fields: [
          {
            name: 'header',
            type: `${aptosCCIPAddress}::offramp::RampMessageHeader`,
          },
          { name: 'sender', type: 'vector<u8>' },
          { name: 'data', type: 'vector<u8>' },
          { name: 'receiver', type: 'address' },
          { name: 'gas_limit', type: 'u256' },
          {
            name: 'token_amounts',
            type: `vector<${aptosCCIPAddress}::offramp::Any2AptosTokenTransfer>`,
          },
        ],
      },
      {
        name: 'Any2AptosTokenTransfer',
        is_native: false,
        is_event: false,
        abilities: ['drop'],
        generic_type_params: [],
        fields: [
          { name: 'source_pool_address', type: 'vector<u8>' },
          { name: 'dest_token_address', type: 'address' },
          { name: 'dest_gas_amount', type: 'u32' },
          { name: 'extra_data', type: 'vector<u8>' },
          { name: 'amount', type: 'u256' },
        ],
      },
      {
        name: 'CommitReport',
        is_native: false,
        is_event: false,
        abilities: ['copy', 'drop', 'store'],
        generic_type_params: [],
        fields: [
          {
            name: 'price_updates',
            type: `${aptosCCIPAddress}::offramp::PriceUpdates`,
          },
          {
            name: 'blessed_merkle_roots',
            type: `vector<${aptosCCIPAddress}::offramp::MerkleRoot>`,
          },
          {
            name: 'unblessed_merkle_roots',
            type: `vector<${aptosCCIPAddress}::offramp::MerkleRoot>`,
          },
          { name: 'rmn_signatures', type: 'vector<vector<u8>>' },
        ],
      },
      {
        name: 'CommitReportAccepted',
        is_native: false,
        is_event: true,
        abilities: ['drop', 'store'],
        generic_type_params: [],
        fields: [
          {
            name: 'blessed_merkle_roots',
            type: `vector<${aptosCCIPAddress}::offramp::MerkleRoot>`,
          },
          {
            name: 'unblessed_merkle_roots',
            type: `vector<${aptosCCIPAddress}::offramp::MerkleRoot>`,
          },
          {
            name: 'price_updates',
            type: `${aptosCCIPAddress}::offramp::PriceUpdates`,
          },
        ],
      },
      {
        name: 'DynamicConfig',
        is_native: false,
        is_event: false,
        abilities: ['copy', 'drop', 'store'],
        generic_type_params: [],
        fields: [
          { name: 'fee_quoter', type: 'address' },
          { name: 'permissionless_execution_threshold_seconds', type: 'u32' },
        ],
      },
      {
        name: 'DynamicConfigSet',
        is_native: false,
        is_event: true,
        abilities: ['drop', 'store'],
        generic_type_params: [],
        fields: [
          {
            name: 'dynamic_config',
            type: `${aptosCCIPAddress}::offramp::DynamicConfig`,
          },
        ],
      },
      {
        name: 'ExecutionReport',
        is_native: false,
        is_event: false,
        abilities: ['drop'],
        generic_type_params: [],
        fields: [
          { name: 'source_chain_selector', type: 'u64' },
          {
            name: 'message',
            type: `${aptosCCIPAddress}::offramp::Any2AptosRampMessage`,
          },
          { name: 'offchain_token_data', type: 'vector<vector<u8>>' },
          { name: 'proofs', type: 'vector<vector<u8>>' },
        ],
      },
      {
        name: 'ExecutionStateChanged',
        is_native: false,
        is_event: true,
        abilities: ['drop', 'store'],
        generic_type_params: [],
        fields: [
          { name: 'source_chain_selector', type: 'u64' },
          { name: 'sequence_number', type: 'u64' },
          { name: 'message_id', type: 'vector<u8>' },
          { name: 'message_hash', type: 'vector<u8>' },
          { name: 'state', type: 'u8' },
        ],
      },
      {
        name: 'GasPriceUpdate',
        is_native: false,
        is_event: false,
        abilities: ['copy', 'drop', 'store'],
        generic_type_params: [],
        fields: [
          { name: 'dest_chain_selector', type: 'u64' },
          { name: 'usd_per_unit_gas', type: 'u256' },
        ],
      },
      {
        name: 'OffRampDeployment',
        is_native: false,
        is_event: false,
        abilities: ['store', 'key'],
        generic_type_params: [],
        fields: [{ name: 'state_signer_cap', type: '0x1::account::SignerCapability' }],
      },
      {
        name: 'OffRampState',
        is_native: false,
        is_event: false,
        abilities: ['store', 'key'],
        generic_type_params: [],
        fields: [
          { name: 'state_signer_cap', type: '0x1::account::SignerCapability' },
          {
            name: 'ownable_state',
            type: `${aptosCCIPAddress}::ownable::OwnableState`,
          },
          {
            name: 'ocr3_base_state',
            type: `${aptosCCIPAddress}::ocr3_base::OCR3BaseState`,
          },
          { name: 'chain_selector', type: 'u64' },
          { name: 'permissionless_execution_threshold_seconds', type: 'u32' },
          {
            name: 'source_chain_configs',
            type: `0x1::smart_table::SmartTable<u64, ${aptosCCIPAddress}::offramp::SourceChainConfig>`,
          },
          {
            name: 'execution_states',
            type: '0x1::smart_table::SmartTable<u64, 0x1::smart_table::SmartTable<u64, u8>>',
          },
          { name: 'roots', type: '0x1::smart_table::SmartTable<vector<u8>, u64>' },
          { name: 'latest_price_sequence_number', type: 'u64' },
          {
            name: 'static_config_set_events',
            type: `0x1::event::EventHandle<${aptosCCIPAddress}::offramp::StaticConfigSet>`,
          },
          {
            name: 'dynamic_config_set_events',
            type: `0x1::event::EventHandle<${aptosCCIPAddress}::offramp::DynamicConfigSet>`,
          },
          {
            name: 'source_chain_config_set_events',
            type: `0x1::event::EventHandle<${aptosCCIPAddress}::offramp::SourceChainConfigSet>`,
          },
          {
            name: 'skipped_already_executed_events',
            type: `0x1::event::EventHandle<${aptosCCIPAddress}::offramp::SkippedAlreadyExecuted>`,
          },
          {
            name: 'execution_state_changed_events',
            type: `0x1::event::EventHandle<${aptosCCIPAddress}::offramp::ExecutionStateChanged>`,
          },
          {
            name: 'commit_report_accepted_events',
            type: `0x1::event::EventHandle<${aptosCCIPAddress}::offramp::CommitReportAccepted>`,
          },
          {
            name: 'skipped_report_execution_events',
            type: `0x1::event::EventHandle<${aptosCCIPAddress}::offramp::SkippedReportExecution>`,
          },
        ],
      },
      {
        name: 'PriceUpdates',
        is_native: false,
        is_event: false,
        abilities: ['copy', 'drop', 'store'],
        generic_type_params: [],
        fields: [
          {
            name: 'token_price_updates',
            type: `vector<${aptosCCIPAddress}::offramp::TokenPriceUpdate>`,
          },
          {
            name: 'gas_price_updates',
            type: `vector<${aptosCCIPAddress}::offramp::GasPriceUpdate>`,
          },
        ],
      },
      {
        name: 'RampMessageHeader',
        is_native: false,
        is_event: false,
        abilities: ['drop'],
        generic_type_params: [],
        fields: [
          { name: 'message_id', type: 'vector<u8>' },
          { name: 'source_chain_selector', type: 'u64' },
          { name: 'dest_chain_selector', type: 'u64' },
          { name: 'sequence_number', type: 'u64' },
          { name: 'nonce', type: 'u64' },
        ],
      },
      {
        name: 'SkippedAlreadyExecuted',
        is_native: false,
        is_event: true,
        abilities: ['drop', 'store'],
        generic_type_params: [],
        fields: [
          { name: 'source_chain_selector', type: 'u64' },
          { name: 'sequence_number', type: 'u64' },
        ],
      },
      {
        name: 'SkippedReportExecution',
        is_native: false,
        is_event: true,
        abilities: ['drop', 'store'],
        generic_type_params: [],
        fields: [{ name: 'source_chain_selector', type: 'u64' }],
      },
      {
        name: 'SourceChainConfig',
        is_native: false,
        is_event: false,
        abilities: ['copy', 'drop', 'store'],
        generic_type_params: [],
        fields: [
          { name: 'router', type: 'address' },
          { name: 'is_enabled', type: 'bool' },
          { name: 'min_seq_nr', type: 'u64' },
          { name: 'is_rmn_verification_disabled', type: 'bool' },
          { name: 'on_ramp', type: 'vector<u8>' },
        ],
      },
      {
        name: 'SourceChainConfigSet',
        is_native: false,
        is_event: true,
        abilities: ['drop', 'store'],
        generic_type_params: [],
        fields: [
          { name: 'source_chain_selector', type: 'u64' },
          {
            name: 'source_chain_config',
            type: `${aptosCCIPAddress}::offramp::SourceChainConfig`,
          },
        ],
      },
      {
        name: 'StaticConfigSet',
        is_native: false,
        is_event: true,
        abilities: ['drop', 'store'],
        generic_type_params: [],
        fields: [
          {
            name: 'static_config',
            type: `${aptosCCIPAddress}::offramp::StaticConfig`,
          },
        ],
      },
      {
        name: 'TokenPriceUpdate',
        is_native: false,
        is_event: false,
        abilities: ['copy', 'drop', 'store'],
        generic_type_params: [],
        fields: [
          { name: 'source_token', type: 'address' },
          { name: 'usd_per_token', type: 'u256' },
        ],
      },
    ],
  }) as const
